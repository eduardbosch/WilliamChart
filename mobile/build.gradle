apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionName "2.4.0"
        versionCode 16
        applicationId "com.db.williamchartdemo"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
//    signingConfigs {
//        release {
//            storeFile file(properties.getProperty("apk.storeFile"))
//            storePassword properties.getProperty("apk.storePassword")
//            keyAlias properties.getProperty("apk.keyAlias")
//            keyPassword properties.getProperty("apk.keyPassword")
//        }
//    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    wearApp project(':wearable')
    implementation project(':williamchart')
    implementation "androidx.appcompat:appcompat:$rootProject.androidxAppcompatVersion"
    implementation "com.google.android.material:material:$rootProject.googleMaterialVersion"
    implementation "androidx.cardview:cardview:$rootProject.androidxCardviewVersion"
    androidTestImplementation  "androidx.annotation:annotation:$rootProject.androidxAnnotationVersion"
    androidTestImplementation  "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation  "androidx.test.ext:junit:$rootProject.runnerVersion"
}

play {
    serviceAccountEmail = properties.getProperty("play.accountEmail")
//    pk12File = file(properties.getProperty("play.p12"))
    track = 'alpha'
}
